"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/use-mutate-post.tsx":
/*!***********************************!*\
  !*** ./hooks/use-mutate-post.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMutatePost: function() { return /* binding */ useMutatePost; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _use_posts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./use-posts */ \"(app-pages-browser)/./hooks/use-posts.tsx\");\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/db */ \"(app-pages-browser)/./lib/db.ts\");\n/* __next_internal_client_entry_do_not_use__ useMutatePost auto */ var _s = $RefreshSig$();\n\n\n\nfunction useMutatePost() {\n    _s();\n    const [isMutating, setIsMutating] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const { mutate } = (0,_use_posts__WEBPACK_IMPORTED_MODULE_1__.usePosts)();\n    // Create a new post\n    const createPost = async (data)=>{\n        setIsMutating(true);\n        try {\n            // Get current session for authorization\n            const { data: { session } } = await _lib_db__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.getSession();\n            const headers = {\n                \"Content-Type\": \"application/json\"\n            };\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\n                headers[\"Authorization\"] = \"Bearer \".concat(session.access_token);\n            }\n            const response = await fetch(\"/api/posts\", {\n                method: \"POST\",\n                headers,\n                body: JSON.stringify(data)\n            });\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || \"Failed to create post\");\n            }\n            const post = await response.json();\n            // Refresh posts list\n            mutate();\n            return post;\n        } finally{\n            setIsMutating(false);\n        }\n    };\n    // Update an existing post\n    const updatePost = async (id, data)=>{\n        setIsMutating(true);\n        try {\n            // Get current session for authorization\n            const { data: { session } } = await _lib_db__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.getSession();\n            const headers = {\n                \"Content-Type\": \"application/json\"\n            };\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\n                headers[\"Authorization\"] = \"Bearer \".concat(session.access_token);\n            }\n            const response = await fetch(\"/api/posts/\".concat(id), {\n                method: \"PATCH\",\n                headers,\n                body: JSON.stringify(data)\n            });\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || \"Failed to update post\");\n            }\n            const post = await response.json();\n            mutate();\n            return post;\n        } finally{\n            setIsMutating(false);\n        }\n    };\n    // Delete a post\n    const deletePost = async (id)=>{\n        setIsMutating(true);\n        try {\n            // Get current session for authorization\n            const { data: { session } } = await _lib_db__WEBPACK_IMPORTED_MODULE_2__.supabase.auth.getSession();\n            const headers = {\n                \"Content-Type\": \"application/json\"\n            };\n            if (session === null || session === void 0 ? void 0 : session.access_token) {\n                headers[\"Authorization\"] = \"Bearer \".concat(session.access_token);\n            }\n            const response = await fetch(\"/api/posts/\".concat(id), {\n                method: \"DELETE\",\n                headers\n            });\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || \"Failed to delete post\");\n            }\n            mutate();\n            // Force a re-fetch by calling the API directly as a fallback      \n            const refreshResponse = await fetch(\"/api/posts?filter=all&limit=10\", {\n                headers: {\n                    \"Authorization\": \"Bearer \".concat(session === null || session === void 0 ? void 0 : session.access_token)\n                }\n            });\n            if (refreshResponse.ok) {\n                console.log(\"useMutatePost: Force re-fetch successful\");\n            } else {\n                console.log(\"useMutatePost: Force re-fetch failed\");\n            }\n        } finally{\n            setIsMutating(false);\n        }\n    };\n    return {\n        createPost,\n        updatePost,\n        deletePost,\n        isMutating\n    };\n}\n_s(useMutatePost, \"AWpAjsbZs59xAKNFUf8HAsEpa3o=\", false, function() {\n    return [\n        _use_posts__WEBPACK_IMPORTED_MODULE_1__.usePosts\n    ];\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/use-mutate-post.tsx\n"));

/***/ })

});